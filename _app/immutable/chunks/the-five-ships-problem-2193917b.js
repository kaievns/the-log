import{S as to,i as oo,s as io,k as s,q as r,a as p,l as n,m as l,r as h,h as t,c as f,n as u,b as i,F as a,C as It}from"./index-920be987.js";function ao(eo){let d,qe,J,He,Le,oe,P,Me,ie,x,Ne,ae,T,Ye,se,j,ze,ne,m,y,K,Ce,le,O,Ue,re,B,Fe,he,S,Re,pe,W,De,fe,c,v,Q,Ge,ue,q,Je,de,H,Ke,me,L,Qe,ye,M,Ve,ce,w,Xe,N,Ze,$e,ve,Y,et,we,b,tt,V,ot,it,be,z,at,ke,k,X,st,nt,Z,lt,_e,C,rt,Ee,_,E,$,ht,Ie,U,pt,Ae,F,ft,ge,R,ut,Pe,D,dt,xe,I,mt,ee,yt,ct,Te,G,vt,je,A,g,te,wt;return{c(){d=s("p"),qe=r(`We talk a lot about vertical vs. horizontal slicing. We write user stories that
encapsulate multiple architecture layers to define `),J=s("em"),He=r("user value"),Le=r(`. And then we
hire a whole bunch of full-stack engineers and spread those stories among the
team members.`),oe=p(),P=s("p"),Me=r(`A typical scrum sprit would usually contain a variety of those stories, plus
random bug fixes, UI improvements, performance patches, and a whole lot of other
tasks. The team members would just grab them one by one as they go.`),ie=p(),x=s("p"),Ne=r(`There is an old thought experiment that contradicts this approach to work. I
like to occasionally throw it around to test POs/TLs process thinking. And
weirdly enough a lot of them fail at the experiment; or they give the right
answer, but keep sticking to the opposite practice in their day job.`),ae=p(),T=s("p"),Ye=r(`As they say, no amount of proof will change the minds of true believers. So, I’m
not here to change anyone’s mind. I’m just sharing an idea.`),se=p(),j=s("p"),ze=r(`But, before we go, the credit for this idea should go where it’s due. I don’t
know who’s the original author of this experiment, but I red about it first in a
book called “beyond the goal”. It’s easily one of my top 5 management books of
all times and I couldn’t recommend it more.`),ne=p(),m=s("h2"),y=s("a"),K=s("span"),Ce=r("The five ships problem"),le=p(),O=s("p"),Ue=r(`Imagine there are five ships in a dock that need unloading, and you have 5
people to do the job.`),re=p(),B=s("p"),Fe=r(`It takes a person roughly 5 days give or take to unload a ship. And you can
assign multiple people to the same ship if you want to.`),he=p(),S=s("p"),Re=r(`And so the question is, how would you assign people to those five ships and why?
On one end of the spectrum you would assign each person individually to each
ship and let them work in parallel. On the ether end you assign all five people
to one ship and let them work through the ships one by one.`),pe=p(),W=s("p"),De=r("Take a moment and think about it. How would you approach this task?"),fe=p(),c=s("h2"),v=s("a"),Q=s("span"),Ge=r("The reasoning"),ue=p(),q=s("p"),Je=r(`So, yeah, I know, I rarely stop and think for myself either. Why bother if the
author will give the answer anyway, right?`),de=p(),H=s("p"),Ke=r("Okay, last chance."),me=p(),L=s("p"),Qe=r("And so, the right answer is to assign all 5 of them to one ship at a time."),ye=p(),M=s("p"),Ve=r(`I know, it seems like in a theoretical scenario like this one, there should be
no difference. But, there is one, and it has to do with probabilities.`),ce=p(),w=s("p"),Xe=r("If you red my "),N=s("a"),Ze=r("rant about estimations"),$e=r(`, you know that estimations
have an asymmetric probabilities curve, and work on average takes longer than
estimated. And even if you had a normal distribution you would still have a
50/50 chance that it would take more than 5 days for a person to unload a ship.`),ve=p(),Y=s("p"),et=r(`And so, if you would assign one person per ship, in 5 days, you would have 2.5
disappointed ship captains. More likely 3 or 4 of them actually. All while
taking valuable space in the dock to keep all 5 ships moored for a week. Which
means extra expenses for the docking company.`),we=p(),b=s("p"),tt=r(`On the other hand, if you assign all 5 people per ship. You’re most likely going
to unload 4 out of 5 ships on time. But you’re also going to unload the first
three ships `),V=s("em"),ot=r("ahead of time"),it=r(`. Which no doubt will delight the captains, and let
the dock to kick them out sooner.`),be=p(),z=s("p"),at=r(`And so the real choice is not in how many people should be assigned to a ship.
The real choice is this:`),ke=p(),k=s("ol"),X=s("li"),st=r("2-3 pissed off customers and full inventory overheads"),nt=p(),Z=s("li"),lt=r("2-3 extra happy customers and less inventory overheads"),_e=p(),C=s("p"),rt=r("And yeah, it’s a trick question, there is no real choice."),Ee=p(),_=s("h2"),E=s("a"),$=s("span"),ht=r("The mythical man month"),Ie=p(),U=s("p"),pt=r(`One of the most provocative software projects management books ever written is
probably “the mythical man month”. I consider it a great piece of management
satire, and it has this famous graph:`),Ae=p(),F=s("p"),ft=r(`This graph describes a child birth and shows the dependency between the number
of people involved in labour and the number of children delivered.`),ge=p(),R=s("p"),ut=r(`Yes, it’s a joke. But, some people take this picture for the face value and use
it as a proof that teamwork in software engineering is basically stupid.`),Pe=p(),D=s("p"),dt=r(`Truth be told, I actually have a guilty habit of giving this book to read to new
tech leads and engineering managers as part of my coaching. It’s a test. I want
to see if the person will understand the irony, or if they will start quoting
the book verbatim.`),xe=p(),I=s("p"),mt=r(`And to be frank, working in a team can be taxing indeed. As a very introvertive
friend of mine likes to joke: `),ee=s("em"),yt=r(`“I didn’t get into software engineering to work
with other people”`),ct=r("."),Te=p(),G=s("p"),vt=r(`But then again. Even if you assign one person to a user story, they will work on
tasks one by one, won’t they? And many of those tasks can be parallelised,
because it’s vertical slicing and there are layers.`),je=p(),A=s("h2"),g=s("a"),te=s("span"),wt=r("Team goals"),this.h()},l(e){d=n(e,"P",{});var o=l(d);qe=h(o,`We talk a lot about vertical vs. horizontal slicing. We write user stories that
encapsulate multiple architecture layers to define `),J=n(o,"EM",{});var At=l(J);He=h(At,"user value"),At.forEach(t),Le=h(o,`. And then we
hire a whole bunch of full-stack engineers and spread those stories among the
team members.`),o.forEach(t),oe=f(e),P=n(e,"P",{});var gt=l(P);Me=h(gt,`A typical scrum sprit would usually contain a variety of those stories, plus
random bug fixes, UI improvements, performance patches, and a whole lot of other
tasks. The team members would just grab them one by one as they go.`),gt.forEach(t),ie=f(e),x=n(e,"P",{});var Pt=l(x);Ne=h(Pt,`There is an old thought experiment that contradicts this approach to work. I
like to occasionally throw it around to test POs/TLs process thinking. And
weirdly enough a lot of them fail at the experiment; or they give the right
answer, but keep sticking to the opposite practice in their day job.`),Pt.forEach(t),ae=f(e),T=n(e,"P",{});var xt=l(T);Ye=h(xt,`As they say, no amount of proof will change the minds of true believers. So, I’m
not here to change anyone’s mind. I’m just sharing an idea.`),xt.forEach(t),se=f(e),j=n(e,"P",{});var Tt=l(j);ze=h(Tt,`But, before we go, the credit for this idea should go where it’s due. I don’t
know who’s the original author of this experiment, but I red about it first in a
book called “beyond the goal”. It’s easily one of my top 5 management books of
all times and I couldn’t recommend it more.`),Tt.forEach(t),ne=f(e),m=n(e,"H2",{id:!0});var bt=l(m);y=n(bt,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var jt=l(y);K=n(jt,"SPAN",{class:!0}),l(K).forEach(t),jt.forEach(t),Ce=h(bt,"The five ships problem"),bt.forEach(t),le=f(e),O=n(e,"P",{});var Ot=l(O);Ue=h(Ot,`Imagine there are five ships in a dock that need unloading, and you have 5
people to do the job.`),Ot.forEach(t),re=f(e),B=n(e,"P",{});var Bt=l(B);Fe=h(Bt,`It takes a person roughly 5 days give or take to unload a ship. And you can
assign multiple people to the same ship if you want to.`),Bt.forEach(t),he=f(e),S=n(e,"P",{});var St=l(S);Re=h(St,`And so the question is, how would you assign people to those five ships and why?
On one end of the spectrum you would assign each person individually to each
ship and let them work in parallel. On the ether end you assign all five people
to one ship and let them work through the ships one by one.`),St.forEach(t),pe=f(e),W=n(e,"P",{});var Wt=l(W);De=h(Wt,"Take a moment and think about it. How would you approach this task?"),Wt.forEach(t),fe=f(e),c=n(e,"H2",{id:!0});var kt=l(c);v=n(kt,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var qt=l(v);Q=n(qt,"SPAN",{class:!0}),l(Q).forEach(t),qt.forEach(t),Ge=h(kt,"The reasoning"),kt.forEach(t),ue=f(e),q=n(e,"P",{});var Ht=l(q);Je=h(Ht,`So, yeah, I know, I rarely stop and think for myself either. Why bother if the
author will give the answer anyway, right?`),Ht.forEach(t),de=f(e),H=n(e,"P",{});var Lt=l(H);Ke=h(Lt,"Okay, last chance."),Lt.forEach(t),me=f(e),L=n(e,"P",{});var Mt=l(L);Qe=h(Mt,"And so, the right answer is to assign all 5 of them to one ship at a time."),Mt.forEach(t),ye=f(e),M=n(e,"P",{});var Nt=l(M);Ve=h(Nt,`I know, it seems like in a theoretical scenario like this one, there should be
no difference. But, there is one, and it has to do with probabilities.`),Nt.forEach(t),ce=f(e),w=n(e,"P",{});var Oe=l(w);Xe=h(Oe,"If you red my "),N=n(Oe,"A",{href:!0});var Yt=l(N);Ze=h(Yt,"rant about estimations"),Yt.forEach(t),$e=h(Oe,`, you know that estimations
have an asymmetric probabilities curve, and work on average takes longer than
estimated. And even if you had a normal distribution you would still have a
50/50 chance that it would take more than 5 days for a person to unload a ship.`),Oe.forEach(t),ve=f(e),Y=n(e,"P",{});var zt=l(Y);et=h(zt,`And so, if you would assign one person per ship, in 5 days, you would have 2.5
disappointed ship captains. More likely 3 or 4 of them actually. All while
taking valuable space in the dock to keep all 5 ships moored for a week. Which
means extra expenses for the docking company.`),zt.forEach(t),we=f(e),b=n(e,"P",{});var Be=l(b);tt=h(Be,`On the other hand, if you assign all 5 people per ship. You’re most likely going
to unload 4 out of 5 ships on time. But you’re also going to unload the first
three ships `),V=n(Be,"EM",{});var Ct=l(V);ot=h(Ct,"ahead of time"),Ct.forEach(t),it=h(Be,`. Which no doubt will delight the captains, and let
the dock to kick them out sooner.`),Be.forEach(t),be=f(e),z=n(e,"P",{});var Ut=l(z);at=h(Ut,`And so the real choice is not in how many people should be assigned to a ship.
The real choice is this:`),Ut.forEach(t),ke=f(e),k=n(e,"OL",{});var Se=l(k);X=n(Se,"LI",{});var Ft=l(X);st=h(Ft,"2-3 pissed off customers and full inventory overheads"),Ft.forEach(t),nt=f(Se),Z=n(Se,"LI",{});var Rt=l(Z);lt=h(Rt,"2-3 extra happy customers and less inventory overheads"),Rt.forEach(t),Se.forEach(t),_e=f(e),C=n(e,"P",{});var Dt=l(C);rt=h(Dt,"And yeah, it’s a trick question, there is no real choice."),Dt.forEach(t),Ee=f(e),_=n(e,"H2",{id:!0});var _t=l(_);E=n(_t,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Gt=l(E);$=n(Gt,"SPAN",{class:!0}),l($).forEach(t),Gt.forEach(t),ht=h(_t,"The mythical man month"),_t.forEach(t),Ie=f(e),U=n(e,"P",{});var Jt=l(U);pt=h(Jt,`One of the most provocative software projects management books ever written is
probably “the mythical man month”. I consider it a great piece of management
satire, and it has this famous graph:`),Jt.forEach(t),Ae=f(e),F=n(e,"P",{});var Kt=l(F);ft=h(Kt,`This graph describes a child birth and shows the dependency between the number
of people involved in labour and the number of children delivered.`),Kt.forEach(t),ge=f(e),R=n(e,"P",{});var Qt=l(R);ut=h(Qt,`Yes, it’s a joke. But, some people take this picture for the face value and use
it as a proof that teamwork in software engineering is basically stupid.`),Qt.forEach(t),Pe=f(e),D=n(e,"P",{});var Vt=l(D);dt=h(Vt,`Truth be told, I actually have a guilty habit of giving this book to read to new
tech leads and engineering managers as part of my coaching. It’s a test. I want
to see if the person will understand the irony, or if they will start quoting
the book verbatim.`),Vt.forEach(t),xe=f(e),I=n(e,"P",{});var We=l(I);mt=h(We,`And to be frank, working in a team can be taxing indeed. As a very introvertive
friend of mine likes to joke: `),ee=n(We,"EM",{});var Xt=l(ee);yt=h(Xt,`“I didn’t get into software engineering to work
with other people”`),Xt.forEach(t),ct=h(We,"."),We.forEach(t),Te=f(e),G=n(e,"P",{});var Zt=l(G);vt=h(Zt,`But then again. Even if you assign one person to a user story, they will work on
tasks one by one, won’t they? And many of those tasks can be parallelised,
because it’s vertical slicing and there are layers.`),Zt.forEach(t),je=f(e),A=n(e,"H2",{id:!0});var Et=l(A);g=n(Et,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var $t=l(g);te=n($t,"SPAN",{class:!0}),l(te).forEach(t),$t.forEach(t),wt=h(Et,"Team goals"),Et.forEach(t),this.h()},h(){u(K,"class","icon icon-link"),u(y,"aria-hidden","true"),u(y,"tabindex","-1"),u(y,"href","#the-five-ships-problem"),u(m,"id","the-five-ships-problem"),u(Q,"class","icon icon-link"),u(v,"aria-hidden","true"),u(v,"tabindex","-1"),u(v,"href","#the-reasoning"),u(c,"id","the-reasoning"),u(N,"href","/posts/3OvR4"),u($,"class","icon icon-link"),u(E,"aria-hidden","true"),u(E,"tabindex","-1"),u(E,"href","#the-mythical-man-month"),u(_,"id","the-mythical-man-month"),u(te,"class","icon icon-link"),u(g,"aria-hidden","true"),u(g,"tabindex","-1"),u(g,"href","#team-goals"),u(A,"id","team-goals")},m(e,o){i(e,d,o),a(d,qe),a(d,J),a(J,He),a(d,Le),i(e,oe,o),i(e,P,o),a(P,Me),i(e,ie,o),i(e,x,o),a(x,Ne),i(e,ae,o),i(e,T,o),a(T,Ye),i(e,se,o),i(e,j,o),a(j,ze),i(e,ne,o),i(e,m,o),a(m,y),a(y,K),a(m,Ce),i(e,le,o),i(e,O,o),a(O,Ue),i(e,re,o),i(e,B,o),a(B,Fe),i(e,he,o),i(e,S,o),a(S,Re),i(e,pe,o),i(e,W,o),a(W,De),i(e,fe,o),i(e,c,o),a(c,v),a(v,Q),a(c,Ge),i(e,ue,o),i(e,q,o),a(q,Je),i(e,de,o),i(e,H,o),a(H,Ke),i(e,me,o),i(e,L,o),a(L,Qe),i(e,ye,o),i(e,M,o),a(M,Ve),i(e,ce,o),i(e,w,o),a(w,Xe),a(w,N),a(N,Ze),a(w,$e),i(e,ve,o),i(e,Y,o),a(Y,et),i(e,we,o),i(e,b,o),a(b,tt),a(b,V),a(V,ot),a(b,it),i(e,be,o),i(e,z,o),a(z,at),i(e,ke,o),i(e,k,o),a(k,X),a(X,st),a(k,nt),a(k,Z),a(Z,lt),i(e,_e,o),i(e,C,o),a(C,rt),i(e,Ee,o),i(e,_,o),a(_,E),a(E,$),a(_,ht),i(e,Ie,o),i(e,U,o),a(U,pt),i(e,Ae,o),i(e,F,o),a(F,ft),i(e,ge,o),i(e,R,o),a(R,ut),i(e,Pe,o),i(e,D,o),a(D,dt),i(e,xe,o),i(e,I,o),a(I,mt),a(I,ee),a(ee,yt),a(I,ct),i(e,Te,o),i(e,G,o),a(G,vt),i(e,je,o),i(e,A,o),a(A,g),a(g,te),a(A,wt)},p:It,i:It,o:It,d(e){e&&t(d),e&&t(oe),e&&t(P),e&&t(ie),e&&t(x),e&&t(ae),e&&t(T),e&&t(se),e&&t(j),e&&t(ne),e&&t(m),e&&t(le),e&&t(O),e&&t(re),e&&t(B),e&&t(he),e&&t(S),e&&t(pe),e&&t(W),e&&t(fe),e&&t(c),e&&t(ue),e&&t(q),e&&t(de),e&&t(H),e&&t(me),e&&t(L),e&&t(ye),e&&t(M),e&&t(ce),e&&t(w),e&&t(ve),e&&t(Y),e&&t(we),e&&t(b),e&&t(be),e&&t(z),e&&t(ke),e&&t(k),e&&t(_e),e&&t(C),e&&t(Ee),e&&t(_),e&&t(Ie),e&&t(U),e&&t(Ae),e&&t(F),e&&t(ge),e&&t(R),e&&t(Pe),e&&t(D),e&&t(xe),e&&t(I),e&&t(Te),e&&t(G),e&&t(je),e&&t(A)}}}const no={title:"The five ships problem",draft:!0};class lo extends to{constructor(d){super(),oo(this,d,null,ao,io,{})}}export{lo as default,no as metadata};
